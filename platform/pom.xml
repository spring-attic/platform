<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>io.spring.platform</groupId>
		<artifactId>platform-build</artifactId>
		<version>Brussels-BUILD-SNAPSHOT</version>
	</parent>

	<artifactId>platform</artifactId>
	<name>Spring IO Platform documentation</name>
	<description>Spring IO Platform documentation</description>
	<url>https://platform.spring.io/platform/</url>
	<organization>
		<name>Pivotal Software, Inc.</name>
		<url>https://spring.io</url>
	</organization>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0</url>
		</license>
	</licenses>
	<scm>
		<connection>scm:git:https://github.com/spring-io/platform</connection>
		<url>https://github.com/spring-io/platform</url>
	</scm>
	<developers>
		<developer>
			<id>wilkinsona</id>
			<name>Andy Wilkinson</name>
			<email>awilkinson at pivotal.io</email>
			<organization>Pivotal Software, Inc.</organization>
			<organizationUrl>https://spring.io</organizationUrl>
			<roles>
				<role>Project lead</role>
			</roles>
		</developer>
	</developers>

	<properties>
		<spring-boot.version>1.5.20.BUILD-SNAPSHOT</spring-boot.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>io.spring.platform</groupId>
			<artifactId>platform-bom</artifactId>
			<version>Brussels-BUILD-SNAPSHOT</version>
			<type>properties</type>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>full</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.8</version>
						<executions>
							<execution>
								<id>copy-versions-properties</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>io.spring.platform</groupId>
											<artifactId>platform-bom</artifactId>
											<version>${project.version}</version>
											<type>properties</type>
											<destFileName>platform-bom.properties</destFileName>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.gmavenplus</groupId>
						<artifactId>gmavenplus-plugin</artifactId>
						<version>1.1</version>
						<executions>
							<execution>
								<goals>
									<goal>execute</goal>
								</goals>
								<phase>generate-resources</phase>
							</execution>
						</executions>
						<configuration>
							<scripts>
								<script>file:///${project.basedir}/src/main/groovyScripts/createVersionsTable.groovy</script>
							</scripts>
						</configuration>
						<dependencies>
							<dependency>
								<groupId>org.codehaus.groovy</groupId>
								<artifactId>groovy-all</artifactId>
								<version>2.3.0</version>
							</dependency>
						</dependencies>
					</plugin>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>0.1.4</version>
						<executions>
							<execution>
								<id>generate-docbook</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDocumentName>index.adoc</sourceDocumentName>
									<backend>docbook5</backend>
									<doctype>book</doctype>
									<attributes>
										<docinfo>true</docinfo>
										<platform-version>${project.version}</platform-version>
										<platform-docs-version>${project.version}</platform-docs-version>
										<platform-repo>${platform-repo}</platform-repo>
										<github-tag>${github-tag}</github-tag>
										<spring-boot-repo>${spring-boot-repo}</spring-boot-repo>
										<spring-boot-version>${spring-boot.version}</spring-boot-version>
									</attributes>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.agilejava.docbkx</groupId>
						<artifactId>docbkx-maven-plugin</artifactId>
						<version>2.0.15</version>
						<configuration>
							<sourceDirectory>${basedir}/target/generated-docs</sourceDirectory>
							<includes>index.xml</includes>
							<xincludeSupported>true</xincludeSupported>
							<chunkedOutput>false</chunkedOutput>
							<foCustomization>${basedir}/src/main/docbook/xsl/pdf.xsl</foCustomization>
							<useExtensions>1</useExtensions>
							<highlightSource>1</highlightSource>
							<highlightXslthlConfig>${basedir}/src/main/docbook/xsl/xslthl-config.xml</highlightXslthlConfig>
						</configuration>
						<dependencies>
							<dependency>
								<groupId>net.sf.xslthl</groupId>
								<artifactId>xslthl</artifactId>
								<version>2.1.0</version>
							</dependency>
							<dependency>
								<groupId>net.sf.docbook</groupId>
								<artifactId>docbook-xml</artifactId>
								<version>5.0-all</version>
								<classifier>resources</classifier>
								<type>zip</type>
								<scope>runtime</scope>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>html-single</id>
								<goals>
									<goal>generate-html</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<htmlCustomization>${basedir}/src/main/docbook/xsl/html-singlepage.xsl</htmlCustomization>
									<targetDirectory>${basedir}/target/docbook/htmlsingle</targetDirectory>
									<postProcess>
										<copy todir="${basedir}/target/contents/reference/htmlsingle">
											<fileset dir="${basedir}/target/docbook/htmlsingle">
												<include name="**/*.html" />
											</fileset>
										</copy>
										<copy todir="${basedir}/target/contents/reference/htmlsingle">
											<fileset dir="${basedir}/src/main/docbook">
												<include name="**/*.css" />
												<include name="**/*.png" />
												<include name="**/*.gif" />
												<include name="**/*.jpg" />
											</fileset>
										</copy>
									</postProcess>
								</configuration>
							</execution>
							<execution>
								<id>html</id>
								<goals>
									<goal>generate-html</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<htmlCustomization>${basedir}/src/main/docbook/xsl/html-multipage.xsl</htmlCustomization>
									<targetDirectory>${basedir}/target/docbook/html</targetDirectory>
									<chunkedOutput>true</chunkedOutput>
									<postProcess>
										<copy todir="${basedir}/target/contents/reference/html">
											<fileset dir="${basedir}/target/docbook/html">
												<include name="**/*.html" />
											</fileset>
										</copy>
										<copy todir="${basedir}/target/contents/reference/html">
											<fileset dir="${basedir}/src/main/docbook">
												<include name="**/*.css" />
												<include name="**/*.png" />
												<include name="**/*.gif" />
												<include name="**/*.jpg" />
											</fileset>
										</copy>
									</postProcess>
								</configuration>
							</execution>
							<execution>
								<id>pdf</id>
								<goals>
									<goal>generate-pdf</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<foCustomization>${basedir}/src/main/docbook/xsl/pdf.xsl</foCustomization>
									<targetDirectory>${basedir}/target/docbook/pdf</targetDirectory>
									<postProcess>
										<copy todir="${basedir}/target/contents/reference">
											<fileset dir="${basedir}/target/docbook">
												<include name="**/*.pdf" />
											</fileset>
										</copy>
										<move file="${basedir}/target/contents/reference/pdf/index.pdf" tofile="${basedir}/target/contents/reference/pdf/platform-reference.pdf" />
									</postProcess>
								</configuration>
							</execution>
							<execution>
								<id>epub</id>
								<goals>
									<goal>generate-epub3</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<epubCustomization>${basedir}/src/main/docbook/xsl/epub.xsl</epubCustomization>
									<targetDirectory>${basedir}/target/docbook/epub</targetDirectory>
									<postProcess>
										<copy todir="${basedir}/target/contents/reference/epub">
											<fileset dir="${basedir}/target/docbook">
												<include name="**/*.epub" />
											</fileset>
										</copy>
										<move file="${basedir}/target/contents/reference/epub/index.epub" tofile="${basedir}/target/contents/reference/epub/platform-reference.epub" />
									</postProcess>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<dependencies>
							<dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>1.0b3</version>
								<exclusions>
									<exclusion>
										<groupId>ant</groupId>
										<artifactId>ant</artifactId>
									</exclusion>
								</exclusions>
							</dependency>
							<dependency>
								<groupId>org.apache.ant</groupId>
								<artifactId>ant-nodeps</artifactId>
								<version>1.8.1</version>
							</dependency>
							<dependency>
								<groupId>org.tigris.antelope</groupId>
								<artifactId>antelopetasks</artifactId>
								<version>3.2.10</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>package-and-attach-docs-zip</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<zip destfile="${project.build.directory}/${project.artifactId}-${project.version}.zip">
											<fileset dir="${project.build.directory}/contents" />
										</zip>
									</target>
								</configuration>
							</execution>
							<execution>
								<id>setup-maven-properties</id>
								<phase>validate</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<exportAntProperties>true</exportAntProperties>
									<target>
										<macrodef name="version-type">
											<attribute name="version" />
											<attribute name="property" />
											<sequential>
												<taskdef resource="net/sf/antcontrib/antcontrib.properties" />
												<taskdef name="stringutil" classname="ise.antelope.tasks.StringUtilTask" />
												<var name="version-type" value="@{version}" />
												<propertyregex property="version-type" override="true" input="${version-type}" regexp=".*-(.*)" replace="\1" />
												<propertyregex property="version-type" override="true" input="${version-type}" regexp="(SR)\d+" replace="RELEASE" />
												<propertyregex property="version-type" override="true" input="${version-type}" regexp="(M)\d+" replace="MILESTONE" />
												<propertyregex property="version-type" override="true" input="${version-type}" regexp="(RC)\d+" replace="MILESTONE" />
												<propertyregex property="version-type" override="true" input="${version-type}" regexp="BUILD-(.*)" replace="SNAPSHOT" />
												<stringutil string="${version-type}" property="@{property}">
													<lowercase />
												</stringutil>
											</sequential>
										</macrodef>
										<version-type version="${project.version}" property="platform-repo" />
										<var name="github-tag" value="v${project.version}" />
										<propertyregex property="github-tag" override="true" input="${github-tag}" regexp=".*SNAPSHOT" replace="master" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<id>attach-zip</id>
								<goals>
									<goal>attach-artifact</goal>
								</goals>
								<configuration>
									<artifacts>
										<artifact>
											<file>${project.build.directory}/${project.artifactId}-${project.version}.zip</file>
											<type>zip;zip.type=docs;zip.deployed=false</type>
											<classifier>docs</classifier>
										</artifact>
									</artifacts>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
