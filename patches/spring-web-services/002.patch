From 86d7b184480f0f7c4a532b848aa0035301b4daca Mon Sep 17 00:00:00 2001
From: Andy Wilkinson <awilkinson@pivotal.io>
Date: Tue, 26 Jan 2016 10:05:07 +0000
Subject: [PATCH] Work around benign changes in output produced by Axiom 1.2.15

---
 .../JaxbElementPayloadMethodProcessorTest.java     |  9 +++++---
 .../XmlRootElementPayloadMethodProcessorTest.java  | 11 +++++----
 .../ws/soap/AbstractSoapMessageTestCase.java       | 18 ++++++++++-----
 .../ws/soap/axiom/AxiomSoap11MessageTest.java      |  5 +++++
 .../axiom/AxiomSoap11NonCachingMessageTest.java    |  8 ++++++-
 .../ws/soap/axiom/AxiomSoap12MessageTest.java      |  5 +++++
 .../axiom/AxiomSoap12NonCachingMessageTest.java    |  9 ++++++--
 .../ws/soap/saaj/SaajSoap11MessageTest.java        | 16 ++++++++++---
 .../ws/soap/saaj/SaajSoap12MessageTest.java        | 10 +++++++++
 .../PayloadValidatingInterceptorTest.java          |  5 +++--
 .../soap/soap11/AbstractSoap11MessageTestCase.java | 19 +++++++++++-----
 .../soap/soap12/AbstractSoap12MessageTestCase.java | 26 ++++++++++++++--------
 12 files changed, 107 insertions(+), 34 deletions(-)

diff --git a/spring-ws-core/src/test/java/org/springframework/ws/server/endpoint/adapter/method/jaxb/JaxbElementPayloadMethodProcessorTest.java b/spring-ws-core/src/test/java/org/springframework/ws/server/endpoint/adapter/method/jaxb/JaxbElementPayloadMethodProcessorTest.java
index c0c8d1e..6baeaa7 100644
--- a/spring-ws-core/src/test/java/org/springframework/ws/server/endpoint/adapter/method/jaxb/JaxbElementPayloadMethodProcessorTest.java
+++ b/spring-ws-core/src/test/java/org/springframework/ws/server/endpoint/adapter/method/jaxb/JaxbElementPayloadMethodProcessorTest.java
@@ -25,8 +25,6 @@ import javax.xml.namespace.QName;
 import javax.xml.transform.Transformer;
 import javax.xml.transform.TransformerFactory;
 
-import static org.custommonkey.xmlunit.XMLAssert.assertXMLEqual;
-import static org.junit.Assert.*;
 import org.junit.Before;
 import org.junit.Test;
 
@@ -42,6 +40,11 @@ import org.springframework.ws.soap.axiom.AxiomSoapMessage;
 import org.springframework.ws.soap.axiom.AxiomSoapMessageFactory;
 import org.springframework.xml.transform.StringResult;
 
+import static org.custommonkey.xmlunit.XMLAssert.*;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertTrue;
+
 public class JaxbElementPayloadMethodProcessorTest {
 
 	private JaxbElementPayloadMethodProcessor processor;
@@ -141,7 +144,7 @@ public class JaxbElementPayloadMethodProcessorTest {
 		response.writeTo(bos);
 		String messageResult = bos.toString("UTF-8");
 
-		assertXMLEqual("<soapenv:Envelope xmlns:soapenv='http://schemas.xmlsoap.org/soap/envelope/'><soapenv:Body>" +
+		assertXMLEqual("<soapenv:Envelope xmlns:soapenv='http://schemas.xmlsoap.org/soap/envelope/'><soapenv:Header/><soapenv:Body>" +
 				"<type xmlns='https://springframework.org'><string>Foo</string></type>" +
 				"</soapenv:Body></soapenv:Envelope>", messageResult);
 
diff --git a/spring-ws-core/src/test/java/org/springframework/ws/server/endpoint/adapter/method/jaxb/XmlRootElementPayloadMethodProcessorTest.java b/spring-ws-core/src/test/java/org/springframework/ws/server/endpoint/adapter/method/jaxb/XmlRootElementPayloadMethodProcessorTest.java
index 09aa7a6..dd3766a 100644
--- a/spring-ws-core/src/test/java/org/springframework/ws/server/endpoint/adapter/method/jaxb/XmlRootElementPayloadMethodProcessorTest.java
+++ b/spring-ws-core/src/test/java/org/springframework/ws/server/endpoint/adapter/method/jaxb/XmlRootElementPayloadMethodProcessorTest.java
@@ -29,8 +29,6 @@ import javax.xml.transform.Transformer;
 import javax.xml.transform.TransformerFactory;
 import javax.xml.transform.sax.SAXSource;
 
-import static org.custommonkey.xmlunit.XMLAssert.assertXMLEqual;
-import static org.junit.Assert.*;
 import org.junit.Before;
 import org.junit.Test;
 import org.xml.sax.ContentHandler;
@@ -52,6 +50,11 @@ import org.springframework.ws.soap.axiom.AxiomSoapMessageFactory;
 import org.springframework.xml.sax.AbstractXmlReader;
 import org.springframework.xml.transform.StringResult;
 
+import static org.custommonkey.xmlunit.XMLAssert.*;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertTrue;
+
 public class XmlRootElementPayloadMethodProcessorTest {
 
 	private XmlRootElementPayloadMethodProcessor processor;
@@ -207,7 +210,7 @@ public class XmlRootElementPayloadMethodProcessorTest {
 		response.writeTo(bos);
 		String messageResult = bos.toString("UTF-8");
 		
-		assertXMLEqual("<soapenv:Envelope xmlns:soapenv='http://schemas.xmlsoap.org/soap/envelope/'><soapenv:Body>" +
+		assertXMLEqual("<soapenv:Envelope xmlns:soapenv='http://schemas.xmlsoap.org/soap/envelope/'><soapenv:Header/><soapenv:Body>" +
 				"<root xmlns='https://springframework.org'><string>Foo</string></root>" +
 				"</soapenv:Body></soapenv:Envelope>", messageResult);
 
@@ -230,7 +233,7 @@ public class XmlRootElementPayloadMethodProcessorTest {
 		response.writeTo(bos);
 		String messageResult = bos.toString("UTF-8");
 
-		assertXMLEqual("<soapenv:Envelope xmlns:soapenv='http://schemas.xmlsoap.org/soap/envelope/'><soapenv:Body>" +
+		assertXMLEqual("<soapenv:Envelope xmlns:soapenv='http://schemas.xmlsoap.org/soap/envelope/'><soapenv:Header/><soapenv:Body>" +
 				"<root xmlns='https://springframework.org'><string>Foo</string></root>" +
 				"</soapenv:Body></soapenv:Envelope>", messageResult);
 
diff --git a/spring-ws-core/src/test/java/org/springframework/ws/soap/AbstractSoapMessageTestCase.java b/spring-ws-core/src/test/java/org/springframework/ws/soap/AbstractSoapMessageTestCase.java
index 490121a..d0f5e8d 100644
--- a/spring-ws-core/src/test/java/org/springframework/ws/soap/AbstractSoapMessageTestCase.java
+++ b/spring-ws-core/src/test/java/org/springframework/ws/soap/AbstractSoapMessageTestCase.java
@@ -24,6 +24,9 @@ import javax.xml.namespace.QName;
 import javax.xml.stream.XMLStreamException;
 import javax.xml.stream.XMLStreamWriter;
 
+import org.junit.Test;
+import org.xml.sax.SAXParseException;
+
 import org.springframework.core.io.Resource;
 import org.springframework.util.StringUtils;
 import org.springframework.ws.mime.AbstractMimeMessageTestCase;
@@ -36,14 +39,19 @@ import org.springframework.xml.transform.StringResult;
 import org.springframework.xml.validation.XmlValidator;
 import org.springframework.xml.validation.XmlValidatorFactory;
 
-import org.junit.Test;
-import org.xml.sax.SAXParseException;
-
-import static org.custommonkey.xmlunit.XMLAssert.assertXMLEqual;
-import static org.junit.Assert.*;
+import static org.custommonkey.xmlunit.XMLAssert.*;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
+import static org.junit.Assert.fail;
 
 public abstract class AbstractSoapMessageTestCase extends AbstractMimeMessageTestCase {
 
+	protected abstract String getNS();
+
+	protected String getHeader() {
+		return "<" + getNS() + ":Header/>";
+	}
+
 	protected SoapMessage soapMessage;
 
 	@Override
diff --git a/spring-ws-core/src/test/java/org/springframework/ws/soap/axiom/AxiomSoap11MessageTest.java b/spring-ws-core/src/test/java/org/springframework/ws/soap/axiom/AxiomSoap11MessageTest.java
index 9f7c936..7d618b1 100644
--- a/spring-ws-core/src/test/java/org/springframework/ws/soap/axiom/AxiomSoap11MessageTest.java
+++ b/spring-ws-core/src/test/java/org/springframework/ws/soap/axiom/AxiomSoap11MessageTest.java
@@ -24,6 +24,11 @@ import org.springframework.ws.soap.soap11.AbstractSoap11MessageTestCase;
 public class AxiomSoap11MessageTest extends AbstractSoap11MessageTestCase {
 
 	@Override
+	protected String getNS() {
+		return "soapenv";
+	}
+
+	@Override
 	protected SoapMessage createSoapMessage() throws Exception {
 		SOAPFactory axiomFactory = OMAbstractFactory.getSOAP11Factory();
 		return new AxiomSoapMessage(axiomFactory);
diff --git a/spring-ws-core/src/test/java/org/springframework/ws/soap/axiom/AxiomSoap11NonCachingMessageTest.java b/spring-ws-core/src/test/java/org/springframework/ws/soap/axiom/AxiomSoap11NonCachingMessageTest.java
index 0457a7b..2893c20 100644
--- a/spring-ws-core/src/test/java/org/springframework/ws/soap/axiom/AxiomSoap11NonCachingMessageTest.java
+++ b/spring-ws-core/src/test/java/org/springframework/ws/soap/axiom/AxiomSoap11NonCachingMessageTest.java
@@ -17,16 +17,22 @@
 package org.springframework.ws.soap.axiom;
 
 import org.apache.axiom.om.impl.llom.OMSourcedElementImpl;
-import static org.junit.Assert.*;
 
 import org.springframework.ws.soap.SoapBody;
 import org.springframework.ws.soap.SoapMessage;
 import org.springframework.ws.soap.SoapVersion;
 import org.springframework.ws.soap.soap11.AbstractSoap11MessageTestCase;
 
+import static org.junit.Assert.*;
+
 public class AxiomSoap11NonCachingMessageTest extends AbstractSoap11MessageTestCase {
 
 	@Override
+	protected String getNS() {
+		return "soapenv";
+	}
+
+	@Override
 	protected SoapMessage createSoapMessage() throws Exception {
 		AxiomSoapMessageFactory messageFactory = new AxiomSoapMessageFactory();
 		messageFactory.setPayloadCaching(false);
diff --git a/spring-ws-core/src/test/java/org/springframework/ws/soap/axiom/AxiomSoap12MessageTest.java b/spring-ws-core/src/test/java/org/springframework/ws/soap/axiom/AxiomSoap12MessageTest.java
index 21c9ed9..00ee7e8 100644
--- a/spring-ws-core/src/test/java/org/springframework/ws/soap/axiom/AxiomSoap12MessageTest.java
+++ b/spring-ws-core/src/test/java/org/springframework/ws/soap/axiom/AxiomSoap12MessageTest.java
@@ -24,6 +24,11 @@ import org.springframework.ws.soap.soap12.AbstractSoap12MessageTestCase;
 public class AxiomSoap12MessageTest extends AbstractSoap12MessageTestCase {
 
 	@Override
+	protected String getNS() {
+		return "soapenv";
+	}
+
+	@Override
 	protected SoapMessage createSoapMessage() throws Exception {
 		SOAPFactory axiomFactory = OMAbstractFactory.getSOAP12Factory();
 		return new AxiomSoapMessage(axiomFactory);
diff --git a/spring-ws-core/src/test/java/org/springframework/ws/soap/axiom/AxiomSoap12NonCachingMessageTest.java b/spring-ws-core/src/test/java/org/springframework/ws/soap/axiom/AxiomSoap12NonCachingMessageTest.java
index 84defa9..42562fa 100644
--- a/spring-ws-core/src/test/java/org/springframework/ws/soap/axiom/AxiomSoap12NonCachingMessageTest.java
+++ b/spring-ws-core/src/test/java/org/springframework/ws/soap/axiom/AxiomSoap12NonCachingMessageTest.java
@@ -16,18 +16,23 @@
 
 package org.springframework.ws.soap.axiom;
 
+import org.apache.axiom.om.impl.llom.OMSourcedElementImpl;
+
 import org.springframework.ws.soap.SoapBody;
 import org.springframework.ws.soap.SoapMessage;
 import org.springframework.ws.soap.SoapVersion;
 import org.springframework.ws.soap.soap12.AbstractSoap12MessageTestCase;
 
-import org.apache.axiom.om.impl.llom.OMSourcedElementImpl;
-
 import static org.junit.Assert.*;
 
 public class AxiomSoap12NonCachingMessageTest extends AbstractSoap12MessageTestCase {
 
 	@Override
+	protected String getNS() {
+		return "soapenv";
+	}
+
+	@Override
 	protected SoapMessage createSoapMessage() throws Exception {
 		AxiomSoapMessageFactory messageFactory = new AxiomSoapMessageFactory();
 		messageFactory.setPayloadCaching(false);
diff --git a/spring-ws-core/src/test/java/org/springframework/ws/soap/saaj/SaajSoap11MessageTest.java b/spring-ws-core/src/test/java/org/springframework/ws/soap/saaj/SaajSoap11MessageTest.java
index da88684..50a24ef 100644
--- a/spring-ws-core/src/test/java/org/springframework/ws/soap/saaj/SaajSoap11MessageTest.java
+++ b/spring-ws-core/src/test/java/org/springframework/ws/soap/saaj/SaajSoap11MessageTest.java
@@ -25,14 +25,14 @@ import javax.xml.soap.SOAPMessage;
 import javax.xml.transform.Result;
 import javax.xml.transform.Source;
 
+import org.junit.Test;
+
 import org.springframework.ws.soap.SoapMessage;
 import org.springframework.ws.soap.soap11.AbstractSoap11MessageTestCase;
 import org.springframework.xml.transform.StringResult;
 import org.springframework.xml.transform.StringSource;
 
-import org.junit.Test;
-
-import static org.custommonkey.xmlunit.XMLAssert.assertXMLEqual;
+import static org.custommonkey.xmlunit.XMLAssert.*;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
 
@@ -41,6 +41,16 @@ public class SaajSoap11MessageTest extends AbstractSoap11MessageTestCase {
 	private SOAPMessage saajMessage;
 
 	@Override
+	protected String getNS() {
+		return "SOAP-ENV";
+	}
+
+	@Override
+	protected String getHeader() {
+		return "";
+	}
+
+	@Override
 	protected final SoapMessage createSoapMessage() throws Exception {
 		MessageFactory messageFactory = MessageFactory.newInstance(SOAPConstants.SOAP_1_1_PROTOCOL);
 		saajMessage = messageFactory.createMessage();
diff --git a/spring-ws-core/src/test/java/org/springframework/ws/soap/saaj/SaajSoap12MessageTest.java b/spring-ws-core/src/test/java/org/springframework/ws/soap/saaj/SaajSoap12MessageTest.java
index 4e778ad..109c558 100644
--- a/spring-ws-core/src/test/java/org/springframework/ws/soap/saaj/SaajSoap12MessageTest.java
+++ b/spring-ws-core/src/test/java/org/springframework/ws/soap/saaj/SaajSoap12MessageTest.java
@@ -33,6 +33,16 @@ import static org.junit.Assert.assertTrue;
 
 public class SaajSoap12MessageTest extends AbstractSoap12MessageTestCase {
 
+	@Override
+	protected String getNS() {
+		return "env";
+	}
+
+	@Override
+	protected String getHeader() {
+		return "";
+	}
+
 	private SOAPMessage saajMessage;
 
 	@Override
diff --git a/spring-ws-core/src/test/java/org/springframework/ws/soap/server/endpoint/interceptor/PayloadValidatingInterceptorTest.java b/spring-ws-core/src/test/java/org/springframework/ws/soap/server/endpoint/interceptor/PayloadValidatingInterceptorTest.java
index 74a2f8b..1254a26 100644
--- a/spring-ws-core/src/test/java/org/springframework/ws/soap/server/endpoint/interceptor/PayloadValidatingInterceptorTest.java
+++ b/spring-ws-core/src/test/java/org/springframework/ws/soap/server/endpoint/interceptor/PayloadValidatingInterceptorTest.java
@@ -27,7 +27,6 @@ import javax.xml.transform.Transformer;
 import javax.xml.transform.TransformerFactory;
 import javax.xml.transform.stream.StreamSource;
 
-import static org.custommonkey.xmlunit.XMLAssert.assertXMLEqual;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;
@@ -55,6 +54,8 @@ import org.springframework.ws.transport.TransportInputStream;
 import org.springframework.xml.validation.ValidationErrorHandler;
 import org.springframework.xml.xsd.SimpleXsdSchema;
 
+import static org.custommonkey.xmlunit.XMLAssert.*;
+
 public class PayloadValidatingInterceptorTest {
 
 	private PayloadValidatingInterceptor interceptor;
@@ -302,7 +303,7 @@ public class PayloadValidatingInterceptorTest {
 		ByteArrayOutputStream os = new ByteArrayOutputStream();
 		messageContext.getResponse().writeTo(os);
 		assertXMLEqual(
-				"<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\">" + "<soapenv:Body>" +
+				"<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\">" + "<soapenv:Header/>" + "<soapenv:Body>" +
 						"<soapenv:Fault>" + "<faultcode>soapenv:Client</faultcode>" +
 						"<faultstring xml:lang='en'>Validation error</faultstring>" + "<detail>" +
 						"<spring-ws:ValidationError xmlns:spring-ws=\"http://springframework.org/spring-ws\">Message 1</spring-ws:ValidationError>" +
diff --git a/spring-ws-core/src/test/java/org/springframework/ws/soap/soap11/AbstractSoap11MessageTestCase.java b/spring-ws-core/src/test/java/org/springframework/ws/soap/soap11/AbstractSoap11MessageTestCase.java
index 3f405f1..4375fcf 100644
--- a/spring-ws-core/src/test/java/org/springframework/ws/soap/soap11/AbstractSoap11MessageTestCase.java
+++ b/spring-ws-core/src/test/java/org/springframework/ws/soap/soap11/AbstractSoap11MessageTestCase.java
@@ -24,8 +24,6 @@ import javax.xml.transform.dom.DOMResult;
 import javax.xml.transform.stream.StreamSource;
 
 import junit.framework.Assert;
-import static org.custommonkey.xmlunit.XMLAssert.assertXMLEqual;
-import static org.junit.Assert.*;
 import org.w3c.dom.Document;
 import org.w3c.dom.Element;
 
@@ -39,6 +37,11 @@ import org.springframework.ws.soap.SoapVersion;
 import org.springframework.ws.transport.MockTransportOutputStream;
 import org.springframework.xml.transform.StringSource;
 
+import static org.custommonkey.xmlunit.XMLAssert.*;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertNotNull;
+import static org.junit.Assert.assertTrue;
+
 public abstract class AbstractSoap11MessageTestCase extends AbstractSoapMessageTestCase {
 
 	@Override
@@ -64,7 +67,7 @@ public abstract class AbstractSoap11MessageTestCase extends AbstractSoapMessageT
 		soapMessage.writeTo(tos);
 		String result = bos.toString("UTF-8");
 		assertXMLEqual(
-				"<Envelope xmlns='http://schemas.xmlsoap.org/soap/envelope/'><Body><payload xmlns='https://www.springframework.org' /></Body></Envelope>",
+				"<" + getNS() + ":Envelope xmlns:" + getNS() + "='http://schemas.xmlsoap.org/soap/envelope/'>" + getHeader() + "<" + getNS() + ":Body><payload xmlns='https://www.springframework.org' /></" + getNS() + ":Body></" + getNS() + ":Envelope>",
 				result);
 		String contentType = tos.getHeaders().get("Content-Type");
 		assertTrue("Invalid Content-Type set", contentType.indexOf(SoapVersion.SOAP_11.getContentType()) != -1);
@@ -99,6 +102,12 @@ public abstract class AbstractSoap11MessageTestCase extends AbstractSoapMessageT
 		Document expected = documentBuilder.newDocument();
 		Element envelope = expected.createElementNS("http://schemas.xmlsoap.org/soap/envelope/", "Envelope");
 		expected.appendChild(envelope);
+
+		if (!getHeader().isEmpty()) {
+			Element header = expected.createElementNS("http://schemas.xmlsoap.org/soap/envelope/", "Header");
+			envelope.appendChild(header);
+		}
+
 		Element body = expected.createElementNS("http://schemas.xmlsoap.org/soap/envelope/", "Body");
 		envelope.appendChild(body);
 		Element payload = expected.createElementNS("https://www.springframework.org", "payload");
@@ -123,7 +132,7 @@ public abstract class AbstractSoap11MessageTestCase extends AbstractSoapMessageT
 
 		String result = bos.toString("UTF-8");
 		assertXMLEqual(
-				"<Envelope xmlns='http://schemas.xmlsoap.org/soap/envelope/'><Body><payload xmlns='https://www.springframework.org' /></Body></Envelope>",
+				"<" + getNS() + ":Envelope xmlns:" + getNS() + "='http://schemas.xmlsoap.org/soap/envelope/'>" + getHeader() + "<" + getNS() + ":Body><payload xmlns='https://www.springframework.org' /></" + getNS() + ":Body></" + getNS() + ":Envelope>",
 				result);
 	}
 
@@ -148,7 +157,7 @@ public abstract class AbstractSoap11MessageTestCase extends AbstractSoapMessageT
 
 		String result = bos.toString("UTF-8");
 		assertXMLEqual(
-				"<Envelope xmlns='http://schemas.xmlsoap.org/soap/envelope/'><Body><payload xmlns='https://www.springframework.org' /></Body></Envelope>",
+				"<" + getNS() + ":Envelope xmlns:" + getNS() + "='http://schemas.xmlsoap.org/soap/envelope/'>" + getHeader() + "<" + getNS() + ":Body><payload xmlns='https://www.springframework.org' /></" + getNS() + ":Body></" + getNS() + ":Envelope>",
 				result);
 	}
 
diff --git a/spring-ws-core/src/test/java/org/springframework/ws/soap/soap12/AbstractSoap12MessageTestCase.java b/spring-ws-core/src/test/java/org/springframework/ws/soap/soap12/AbstractSoap12MessageTestCase.java
index b5ae486..ed8e911 100644
--- a/spring-ws-core/src/test/java/org/springframework/ws/soap/soap12/AbstractSoap12MessageTestCase.java
+++ b/spring-ws-core/src/test/java/org/springframework/ws/soap/soap12/AbstractSoap12MessageTestCase.java
@@ -23,6 +23,10 @@ import javax.xml.parsers.DocumentBuilderFactory;
 import javax.xml.transform.dom.DOMResult;
 import javax.xml.transform.stream.StreamSource;
 
+import junit.framework.Assert;
+import org.w3c.dom.Document;
+import org.w3c.dom.Element;
+
 import org.springframework.core.io.ByteArrayResource;
 import org.springframework.core.io.ClassPathResource;
 import org.springframework.core.io.InputStreamSource;
@@ -34,12 +38,10 @@ import org.springframework.ws.transport.MockTransportOutputStream;
 import org.springframework.ws.transport.TransportConstants;
 import org.springframework.xml.transform.StringSource;
 
-import junit.framework.Assert;
-import org.w3c.dom.Document;
-import org.w3c.dom.Element;
-
-import static org.custommonkey.xmlunit.XMLAssert.assertXMLEqual;
-import static org.junit.Assert.*;
+import static org.custommonkey.xmlunit.XMLAssert.*;
+import static org.junit.Assert.assertNotNull;
+import static org.junit.Assert.assertNull;
+import static org.junit.Assert.assertTrue;
 
 public abstract class AbstractSoap12MessageTestCase extends AbstractSoapMessageTestCase {
 
@@ -67,7 +69,7 @@ public abstract class AbstractSoap12MessageTestCase extends AbstractSoapMessageT
 		soapMessage.writeTo(tos);
 		String result = bos.toString("UTF-8");
 		assertXMLEqual(
-				"<Envelope xmlns='http://www.w3.org/2003/05/soap-envelope'><Body><payload xmlns='https://www.springframework.org' /></Body></Envelope>",
+				"<" + getNS() + ":Envelope xmlns:" + getNS() + "='http://www.w3.org/2003/05/soap-envelope'>" + getHeader() + "<" + getNS() + ":Body><payload xmlns='https://www.springframework.org' /></" + getNS() + ":Body></" + getNS() + ":Envelope>",
 				result);
 		String contentType = tos.getHeaders().get(TransportConstants.HEADER_CONTENT_TYPE);
 		assertTrue("Invalid Content-Type set",
@@ -104,6 +106,12 @@ public abstract class AbstractSoap12MessageTestCase extends AbstractSoapMessageT
 		Document expected = documentBuilder.newDocument();
 		Element envelope = expected.createElementNS("http://www.w3.org/2003/05/soap-envelope", "Envelope");
 		expected.appendChild(envelope);
+
+		if (!getHeader().isEmpty()) {
+			Element header = expected.createElementNS("http://www.w3.org/2003/05/soap-envelope", "Header");
+			envelope.appendChild(header);
+		}
+
 		Element body = expected.createElementNS("http://www.w3.org/2003/05/soap-envelope", "Body");
 		envelope.appendChild(body);
 		Element payload = expected.createElementNS("https://www.springframework.org", "payload");
@@ -128,7 +136,7 @@ public abstract class AbstractSoap12MessageTestCase extends AbstractSoapMessageT
 
 		String result = bos.toString("UTF-8");
 		assertXMLEqual(
-				"<Envelope xmlns='http://www.w3.org/2003/05/soap-envelope'><Body><payload xmlns='https://www.springframework.org' /></Body></Envelope>",				   
+				"<" + getNS() + ":Envelope xmlns:" + getNS() + "='http://www.w3.org/2003/05/soap-envelope'>" + getHeader() + "<" + getNS() + ":Body><payload xmlns='https://www.springframework.org' /></" + getNS() + ":Body></" + getNS() + ":Envelope>",
 				result);
 	}
 
@@ -153,7 +161,7 @@ public abstract class AbstractSoap12MessageTestCase extends AbstractSoapMessageT
 
 		String result = bos.toString("UTF-8");
 		assertXMLEqual(
-				"<Envelope xmlns='http://www.w3.org/2003/05/soap-envelope'><Body><payload xmlns='https://www.springframework.org' /></Body></Envelope>",
+				"<" + getNS() + ":Envelope xmlns:" + getNS() + "='http://www.w3.org/2003/05/soap-envelope'>" + getHeader() + "<" + getNS() + ":Body><payload xmlns='https://www.springframework.org' /></" + getNS() + ":Body></" + getNS() + ":Envelope>",
 				result);
 	}
 
-- 
2.6.4

